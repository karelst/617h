Global DeviceClass PIR_GIO
Connector GeneralIOConnector

Protected Property unitId As Long := 0 WithAttributes
{
	PropertyGroup := "PIR sensor",
	DisplayName := "UnitID"
}

Protected Property timeWindow As Time := 1:20 WithAttributes
{
	PropertyGroup := "PIR sensor",
	DisplayName := "Time Window",
	EditMode := "TimeInterval"
}

Protected Property eventsInTimeWinwdowForAlarm As Long := 2 WithAttributes
{
	PropertyGroup := "PIR sensor",
	DisplayName := "Events count"
}

Var timeCounter As Time
Var eventCounter As Long := 0
Var isTimeWindow As Boolean := False

Global Event Alarm As Process (unitID As Long, alarmTime As Time )
Global Event OnClose As Process ()
Global Event OnOpen As Process ()

Private Function Init ()
	GeneralIOConnector.PullUpOn ()
	GeneralIOConnector.Open ()
	StartProcess IOCheck ()
End Function


Private Process IOCheck()
	Do
		GeneralIOConnector.WaitWhileVoltageInRange (2,5)
		If GeneralIOConnector.GetVoltage() < 2.5 Then RaiseEvent OnClose() End If
		GeneralIOConnector.WaitWhileVoltageInRange (0,3)
		If GeneralIOConnector.GetVoltage() > 2.5 Then 
			RaiseEvent OnOpen() 
			checkAlarm()
		End If
		Wait(:0.1)
	End Do
End Process


Private Function checkAlarm ()
	If Not isTimeWindow Then
		StopProcess runTimeWindow ()
		eventCounter := eventsInTimeWinwdowForAlarm
		StartProcess runTimeWindow ()
	End If
	eventCounter -= 1
	If eventCounter = 0 Then
		StopProcess runTimeWindow ()
		isTimeWindow := False
		RaiseEvent Alarm(unitId, GetLocalTime())
	End If
End Function

Private Process runTimeWindow()
	isTimeWindow := True	
		Wait(timeWindow)
	isTimeWindow := False
End Process




End DeviceClass
